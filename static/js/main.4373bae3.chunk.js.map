{"version":3,"sources":["components/Container.js","components/Col.js","components/Row.js","components/Table.js","components/EmployeeCard.js","utils/API.js","components/Header.js","components/SearchForm.js","components/EmployeeDirectory.js","App.js","index.js"],"names":["Container","props","className","children","Col","size","split","map","join","Row","fluid","Table","scope","onClick","handleSortName","role","data-toggle","handleSortPhone","handleSortLocation","EmployeeCard","alt","name","src","picture","phone","email","dob","location","getEmployee","axios","get","Header","SearchForm","onChange","handleInputChange","value","type","placeholder","id","handleFormSubmit","EmployeeDirectory","state","employees","search","inputRef","React","createRef","searchEmployees","filter","searchEmp","employee","console","log","current","toLowerCase","includes","setState","sortedName","sort","a","b","localeCompare","sortedPhone","parseInt","sortedLocation","event","target","preventDefault","loadEmployee","then","res","data","results","emp","index","large","first","last","moment","date","format","city","key","catch","err","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mPAWeA,MARf,SAAmBC,GACjB,OACE,qBAAKC,UAAU,mCAAf,SACKD,EAAME,YCQAC,MAVf,SAAaH,GACX,IAAMI,EAAOJ,EAAMI,KAAKC,MAAM,KAAKC,KAAI,SAAAF,GAAI,MAAI,OAASA,KAAMG,KAAK,KAEnE,OACE,qBAAKN,UAAWG,EAAhB,SACGJ,EAAME,YCHEM,MAJf,SAAaR,GACX,OAAO,qBAAKC,UAAS,aAAQD,EAAMS,MAAQ,SAAW,IAA/C,SAAsDT,EAAME,YCiCtDQ,MAhCf,SAAeV,GACX,OACI,wBAAOC,UAAU,qDAAjB,UACN,gCACE,+BACE,oBAAIU,MAAM,MAAV,mBACA,oBAAIA,MAAM,MACJC,QAASZ,EAAMa,eACfZ,UAAU,kBACVa,KAAK,SACLC,cAAY,WAJlB,kBAKA,oBAAIJ,MAAM,MACJC,QAASZ,EAAMgB,gBACff,UAAU,kBACVa,KAAK,SACLC,cAAY,WAJlB,mBAKA,oBAAIJ,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,iBACA,oBAAIA,MAAM,MACJC,QAASZ,EAAMiB,mBACfhB,UAAU,kBACVa,KAAK,SACLC,cAAY,WAJlB,2BAOJ,gCACCf,EAAME,eCfMgB,MAbf,SAAsBlB,GAClB,OACQ,+BACI,qBAAIW,MAAM,MAAV,cAAiB,qBAAKQ,IAAKnB,EAAMoB,KAAMC,IAAKrB,EAAMsB,aAClD,oBAAIX,MAAM,MAAV,SAAiBX,EAAMoB,OACvB,oBAAIT,MAAM,MAAV,SAAiBX,EAAMuB,QACvB,oBAAIZ,MAAM,MAAV,SAAiBX,EAAMwB,QACvB,oBAAIb,MAAM,MAAV,SAAiBX,EAAMyB,MACvB,oBAAId,MAAM,MAAV,SAAiBX,EAAM0B,e,iBCJxBC,MAJf,WACI,OAAOC,IAAMC,IAAI,iD,iBCWNC,MAXf,WACI,OACJ,qBAAK7B,UAAU,oCAAf,SACI,sBAAKA,UAAU,mCAAf,UACI,oBAAIA,UAAU,YAAd,gCACA,mBAAGA,UAAU,OAAb,+FCmBO8B,MAzBf,SAAoB/B,GAChB,OACA,sBAAKC,UAAU,cAAf,UACI,qBAAKA,UAAU,eAAf,SACI,uBAAO+B,SACChC,EAAMiC,kBAEVC,MACIlC,EAAMkC,MAEVd,KAAK,SACLe,KAAK,OACLlC,UAAU,eACVmC,YAAY,yBACZC,GAAG,aAEX,wBAAQF,KAAK,SAASlC,UAAU,kBAC5BW,QAASZ,EAAMsC,iBADnB,SAEI,mBAAGrC,UAAU,uBCkHVsC,E,4MAzHXC,MAAQ,CACJC,UAAW,GACXC,OAAQ,I,EAGZC,SAAWC,IAAMC,Y,EAQjBC,gBAAkB,SAAAC,GACd,IAAMC,EAAY,EAAKR,MAAMC,UAAUM,QAAO,SAACE,GAE3C,OADAC,QAAQC,IAAIF,EAAU,EAAKN,SAASS,SAC7BH,EAAS7B,KAAKiC,cAAcC,SAAS,EAAKX,SAASS,QAAQC,kBAGtE,EAAKE,SAAS,CAACd,UAAWO,K,EAI9BnC,eAAiB,WACb,IAAM2C,EAAa,EAAKhB,MAAMC,UAAUgB,MAAK,SAACC,EAAEC,GAC5C,OAAOD,EAAEtC,KAAKwC,cAAcD,EAAEvC,SAElC,EAAKmC,SAAS,CAACd,UAAYe,IAC3BN,QAAQC,IAAI,gBAAiBK,I,EAIjCxC,gBAAkB,WACd,IAAM6C,EAAc,EAAKrB,MAAMC,UAAUgB,MAAK,SAACC,EAAEC,GAC7C,OAAOG,SAASJ,EAAEnC,OAASuC,SAASH,EAAEpC,UAE1C,EAAKgC,SAAS,CAACd,UAAYoB,IAC3BX,QAAQC,IAAI,iBAAkBU,I,EAIlC5C,mBAAqB,WACjB,IAAM8C,EAAiB,EAAKvB,MAAMC,UAAUgB,MAAK,SAACC,EAAEC,GAChD,OAAOD,EAAEhC,SAASkC,cAAcD,EAAEjC,aAEtC,EAAK6B,SAAS,CAACd,UAAYsB,K,EAG7B9B,kBAAoB,SAAA+B,GAClB,IAAM9B,EAAQ8B,EAAMC,OAAO/B,MAC3B,EAAKS,SAASS,QAAUlB,EACxBgB,QAAQC,IAAI,EAAKR,UACjB,IAAMvB,EAAO4C,EAAMC,OAAO7C,KACtB,EAAKmC,SAAL,eACCnC,EAAOc,K,EAIhBI,iBAAmB,SAAA0B,GACfA,EAAME,iBACN,EAAKpB,gBAAgB,EAAKN,MAAME,S,EAIpCyB,aAAe,WACXxC,IACMyC,MAAM,SAAAC,GAAG,OACP,EAAKd,SAAS,CACVd,UAAW4B,EAAIC,KAAKC,QAAQjE,KAAI,SAACkE,EAAKC,GAAN,MAAiB,CAC7CnD,QAASkD,EAAIlD,QAAQoD,MACrBtD,KAAMoD,EAAIpD,KAAKuD,MAAQ,IAAMH,EAAIpD,KAAKwD,KACtCrD,MAAOiD,EAAIjD,MACXC,MAAOgD,EAAIhD,MACXC,IAAKoD,IAAOL,EAAI/C,IAAIqD,MAAMC,OAAO,KACjCrD,SAAU8C,EAAI9C,SAASsD,KACvBC,IAAKR,WAGZS,OAAM,SAACC,GAAD,OAASjC,QAAQC,IAAIgC,O,uDAtExC,WACIC,KAAKjB,iB,oBA0ET,WACI,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,eAAC,EAAD,WACA,cAAC,EAAD,CAAK/D,KAAK,OAAV,SACF,cAAC,EAAD,CACE8B,MAAOkD,KAAK5C,MAAME,OAClBT,kBAAmBmD,KAAKnD,kBACxBK,iBAAkB8C,KAAK9C,qBAInB,cAAC,EAAD,CAAKlC,KAAM,QAAX,SACI,cAAC,EAAD,CAAOS,eAAgBuE,KAAKvE,eACpBG,gBAAiBoE,KAAKpE,gBACtBC,mBAAoBmE,KAAKnE,mBAFjC,SAGK,YAAImE,KAAK5C,MAAMC,WAAWnC,KAAI,SAAC2C,GAAD,OAC3B,cAAC,EAAD,CACA3B,QAAW2B,EAAS3B,QACpBF,KAAQ6B,EAAS7B,KACjBG,MAAS0B,EAAS1B,MAClBC,MAASyB,EAASzB,MAClBC,IAAOwB,EAASxB,IAChBC,SAAYuB,EAASvB,UACduB,EAASgC,sB,GA7GhBI,aCLjBC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCETC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4373bae3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/style.css\"\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className=\"container px-3 mb-5 empContainer\">\r\n        {props.children}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Container;","import React from \"react\";\r\n\r\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\r\n\r\nfunction Col(props) {\r\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\r\n\r\n  return (\r\n    <div className={size}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Col;","import React from \"react\";\r\n\r\nfunction Row(props) {\r\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\r\n}\r\n\r\nexport default Row;","import React from \"react\";\r\n\r\nimport \"../css/style.css\"\r\n\r\nfunction Table(props) {\r\n    return (\r\n        <table className=\"table table-striped table-bordered table-dark mt-3\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Image</th>\r\n      <th scope=\"col\" \r\n            onClick={props.handleSortName}\r\n            className=\"dropdown-toggle\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\">Name</th>\r\n      <th scope=\"col\"\r\n            onClick={props.handleSortPhone}\r\n            className=\"dropdown-toggle\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\">Phone</th>\r\n      <th scope=\"col\">Email</th>\r\n      <th scope=\"col\">DOB</th>\r\n      <th scope=\"col\" \r\n            onClick={props.handleSortLocation}\r\n            className=\"dropdown-toggle\"\r\n            role=\"button\"\r\n            data-toggle=\"dropdown\">Location</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {props.children}\r\n  </tbody>\r\n</table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React from \"react\";\r\n\r\nfunction EmployeeCard(props) {\r\n    return (\r\n            <tr>\r\n                <th scope=\"col\"> <img alt={props.name} src={props.picture} /></th>\r\n                <th scope=\"col\">{props.name}</th>\r\n                <th scope=\"col\">{props.phone}</th>\r\n                <th scope=\"col\">{props.email}</th>\r\n                <th scope=\"col\">{props.dob}</th>\r\n                <th scope=\"col\">{props.location}</th>\r\n            </tr>\r\n    );\r\n}\r\n\r\nexport default EmployeeCard;","import axios from \"axios\";\r\n\r\nfunction getEmployee() {\r\n    return axios.get(\"https://randomuser.me/api/?results=20&nat=au\");\r\n}\r\n\r\nexport default getEmployee;","import React from \"react\";\r\nimport \"../css/style.css\"\r\n\r\nfunction Header() {\r\n    return (\r\n<div className=\"jumbotron jumbotron-fluid bg-info\">\r\n    <div className=\"container text-center text-white\">\r\n        <h1 className=\"display-4\">Employee Directory</h1>\r\n        <p className=\"lead\">Use the search box to find an employee or sort by Name, Phone or Location  </p>\r\n    </div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n    <div className=\"input-group\">\r\n        <div className=\"form-outline\">\r\n            <input onChange={\r\n                    props.handleInputChange\r\n                }\r\n                value={\r\n                    props.value\r\n                }\r\n                name=\"search\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Search For an employee\"\r\n                id=\"search\"/>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\"\r\n            onClick={props.handleFormSubmit}>\r\n            <i className=\"fa fa-search\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import React, { Component } from \"react\";\r\nimport Container from \"./Container\";\r\nimport Col from \"./Col\";\r\nimport Row from \"./Row\";\r\nimport Table from \"./Table\";\r\nimport EmployeeCard from \"./EmployeeCard\";\r\nimport getEmployee from \"../utils/API\";\r\nimport moment from \"moment\";\r\nimport Header from \"./Header\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport \"../css/style.css\"\r\n\r\nclass EmployeeDirectory extends Component {\r\n    state = {\r\n        employees: [],\r\n        search: \"\"\r\n    };\r\n\r\n    inputRef = React.createRef();\r\n\r\n    //When the components mount, load the employee table\r\n    componentDidMount() {\r\n        this.loadEmployee();\r\n    }\r\n\r\n    //Function to search employee by name\r\n    searchEmployees = filter => { \r\n        const searchEmp = this.state.employees.filter((employee) => {\r\n            console.log(employee, this.inputRef.current);\r\n            return employee.name.toLowerCase().includes(this.inputRef.current.toLowerCase());\r\n        });\r\n\r\n        this.setState({employees: searchEmp});\r\n      };\r\n\r\n    //Function to sort name of the employee\r\n    handleSortName = () => {\r\n        const sortedName = this.state.employees.sort((a,b) => {\r\n            return a.name.localeCompare(b.name)\r\n        })\r\n        this.setState({employees : sortedName})\r\n        console.log(\"Sorted Name: \", sortedName);\r\n    }\r\n\r\n    //Function to sort phone number of the employee\r\n    handleSortPhone = () => {\r\n        const sortedPhone = this.state.employees.sort((a,b) => {\r\n            return parseInt(a.phone) - parseInt(b.phone)\r\n        })\r\n        this.setState({employees : sortedPhone})\r\n        console.log(\"Sorted Phone: \", sortedPhone);\r\n    }\r\n\r\n    //Function to sort location name of the employee\r\n    handleSortLocation = () => {\r\n        const sortedLocation = this.state.employees.sort((a,b) => {\r\n            return a.location.localeCompare(b.location)\r\n        })\r\n        this.setState({employees : sortedLocation})\r\n    }\r\n\r\n      handleInputChange = event => {\r\n        const value = event.target.value;\r\n        this.inputRef.current = value;\r\n        console.log(this.inputRef);\r\n        const name = event.target.name;\r\n            this.setState({\r\n            [name]: value\r\n    });\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.searchEmployees(this.state.search);\r\n    }\r\n\r\n    //loadEmployee function, call the API \r\n    loadEmployee = () => {\r\n        getEmployee()\r\n            . then (res =>\r\n                this.setState({\r\n                    employees: res.data.results.map((emp, index) => ({\r\n                        picture: emp.picture.large,\r\n                        name: emp.name.first + \" \" + emp.name.last,\r\n                        phone: emp.phone,\r\n                        email: emp.email,\r\n                        dob: moment(emp.dob.date).format(\"L\"),\r\n                        location: emp.location.city,\r\n                        key: index\r\n                    }))\r\n                }))\r\n                .catch((err) => console.log(err))\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Header />\r\n                <Row>\r\n                <Col size=\"md-4\">\r\n              <SearchForm\r\n                value={this.state.search}\r\n                handleInputChange={this.handleInputChange}\r\n                handleFormSubmit={this.handleFormSubmit}\r\n              />\r\n           \r\n          </Col>\r\n                    <Col size =\"md-12\">\r\n                        <Table handleSortName={this.handleSortName}\r\n                                handleSortPhone={this.handleSortPhone}\r\n                                handleSortLocation={this.handleSortLocation}>\r\n                            {[...this.state.employees].map((employee) => (\r\n                                <EmployeeCard\r\n                                picture = {employee.picture}\r\n                                name = {employee.name}\r\n                                phone = {employee.phone}\r\n                                email = {employee.email}\r\n                                dob = {employee.dob}\r\n                                location = {employee.location}\r\n                                key = {employee.key}\r\n                                />\r\n                            ))}\r\n                        </Table>\r\n                    </Col>\r\n                   \r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default EmployeeDirectory;","import React from \"react\";\r\nimport EmployeeDirectory from \"./components/EmployeeDirectory\";\r\n\r\nfunction App() {\r\n  return <EmployeeDirectory />;\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./css/style.css\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}